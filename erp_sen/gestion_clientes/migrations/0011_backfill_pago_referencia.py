# Generated by Django 5.2.4
from django.db import migrations
from django.db.models import Q


def forwards(apps, schema_editor):
    Pago = apps.get_model('gestion_clientes', 'Pago')

    # Completar referencia donde esté NULL o vacía.
    # Si hay número de factura, úsalo; si no, genera "LEGACY-<id>".
    qs = Pago.objects.filter(Q(referencia__isnull=True) | Q(referencia=''))
    for p in qs.iterator(chunk_size=1000):
        ref = p.numero_factura or f'LEGACY-{p.id}'
        p.referencia = str(ref)
        p.save(update_fields=['referencia'])


def backwards(apps, schema_editor):
    # No revertimos el backfill (dejamos la referencia tal cual).
    # Si prefieres vaciarla al revertir y tu esquema lo permite:
    #   Pago = apps.get_model('gestion_clientes', 'Pago')
    #   for p in Pago.objects.all().iterator(chunk_size=1000):
    #       p.referencia = ''
    #       p.save(update_fields=['referencia'])
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('gestion_clientes', '0010_pago_numero_factura_alter_pago_forma_pago'),
    ]

    operations = [
        migrations.RunPython(forwards, reverse_code=backwards),
    ]
